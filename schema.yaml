openapi: 3.0.3
info:
    title: Coderr API
    version: 1.0.0
    description: A simple API for the Freelancer platform Coderr

paths:
    /api/base-info/:
        get:
            operationId: base_info_retrieve
            description: |-
                Retrieve general platform statistics.

                Returns a JSON response with:
                  - review_count: Total number of reviews.
                  - average_rating: Average review score (rounded to one decimal).
                  - business_profile_count: Number of business profiles.
                  - offer_count: Total number of offers.
            tags:
                - base-info
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BaseInfo"

    /api/completed-order-count/{business_user_id}/:
        get:
            operationId: completed_order_count_retrieve
            description: Handles GET requests to count completed orders for a business user.
            tags:
                - completed-order-count
            parameters:
                - in: path
                  name: business_user_id
                  required: true
                  schema:
                      type: integer
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CompletedOrderCount"

    /api/login/:
        post:
            operationId: login_create
            description: Authenticates a user and returns an authentication token.
            tags:
                - login
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AuthToken"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/AuthToken"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/AuthToken"
            security:
                - tokenAuth: []
                - {}
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthToken"

    /api/offerdetails/{id}/:
        get:
            operationId: offerdetails_retrieve
            description: Retrieve a single offer detail.
            tags:
                - offerdetails
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/OfferDetail"

    /api/offers/:
        get:
            operationId: offers_list
            description: |-
                List offers with filtering, ordering, pagination, and search support.
                Query parameters include:
                  - creator_id: Filter offers by creator's user ID.
                  - min_price: Filter offers with a minimum aggregated price.
                  - max_delivery_time: Filter offers with a maximum aggregated delivery time.
                  - ordering: Field used for ordering results.
                  - page, page_size: Pagination parameters.
                  - search: Search term to match in title and description.
            tags:
                - offers
            parameters:
                - in: query
                  name: creator_id
                  schema:
                      type: integer
                - in: query
                  name: min_price
                  schema:
                      type: number
                - in: query
                  name: max_delivery_time
                  schema:
                      type: integer
                - in: query
                  name: ordering
                  schema:
                      type: string
                  description: Field to order by.
                - in: query
                  name: page
                  schema:
                      type: integer
                  description: Page number.
                - in: query
                  name: page_size
                  schema:
                      type: integer
                  description: Number of results per page.
                - in: query
                  name: search
                  schema:
                      type: string
                  description: Search term.
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/PaginatedOfferList"
        post:
            operationId: offers_create
            description: Create a new offer along with exactly three offer detail objects.
            tags:
                - offers
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Offer"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/Offer"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/Offer"
            security:
                - tokenAuth: []
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Offer"

    /api/offers/{id}/:
        get:
            operationId: offers_retrieve
            description: Retrieve details of a specific offer.
            tags:
                - offers
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                  description: Unique offer ID.
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Offer"
        put:
            operationId: offers_update
            description: Fully update an offer.
            tags:
                - offers
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                  description: Unique offer ID.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Offer"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/Offer"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/Offer"
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Offer"
        patch:
            operationId: offers_partial_update
            description: Partially update an offer.
            tags:
                - offers
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                  description: Unique offer ID.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/PatchedOffer"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/PatchedOffer"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/PatchedOffer"
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Offer"
        delete:
            operationId: offers_destroy
            description: Delete an offer.
            tags:
                - offers
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                  description: Unique offer ID.
            security:
                - tokenAuth: []
            responses:
                "204":
                    description: No Content

    /api/order-count/{business_user_id}/:
        get:
            operationId: order_count_retrieve
            description: Retrieve the count of in-progress orders for a business user.
            tags:
                - order-count
            parameters:
                - in: path
                  name: business_user_id
                  required: true
                  schema:
                      type: integer
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/OrderCount"

    /api/orders/:
        get:
            operationId: orders_list
            description: |-
                List orders for the current authenticated customer or business user.
            tags:
                - orders
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Order"
        post:
            operationId: orders_create
            description: Create a new order. The current user is automatically assigned as the customer.
            tags:
                - orders
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Order"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/Order"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/Order"
            security:
                - tokenAuth: []
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Order"

    /api/orders/{id}/:
        get:
            operationId: orders_retrieve
            description: Retrieve details of a specific order.
            tags:
                - orders
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                  description: Unique order ID.
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Order"
        put:
            operationId: orders_update
            description: Fully update an order.
            tags:
                - orders
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                  description: Unique order ID.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Order"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/Order"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/Order"
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Order"
        patch:
            operationId: orders_partial_update
            description: |-
                Partially update an order.
                Note: Only users with a business profile can update order status.
            tags:
                - orders
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                  description: Unique order ID.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/PatchedOrder"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/PatchedOrder"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/PatchedOrder"
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Order"
        delete:
            operationId: orders_destroy
            description: Delete an order.
            tags:
                - orders
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                  description: Unique order ID.
            security:
                - tokenAuth: []
            responses:
                "204":
                    description: No Content

    /api/profile/{user}/:
        get:
            operationId: profile_retrieve
            description: |-
                Retrieve a user's profile.
            tags:
                - profile
            parameters:
                - in: path
                  name: user
                  required: true
                  schema:
                      type: integer
                  description: Unique user ID.
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserProfile"
        put:
            operationId: profile_update
            description: Fully update a user's profile.
            tags:
                - profile
            parameters:
                - in: path
                  name: user
                  required: true
                  schema:
                      type: integer
                  description: Unique user ID.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserProfile"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/UserProfile"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/UserProfile"
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserProfile"
        patch:
            operationId: profile_partial_update
            description: Partially update a user's profile.
            tags:
                - profile
            parameters:
                - in: path
                  name: user
                  required: true
                  schema:
                      type: integer
                  description: Unique user ID.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/PatchedUserProfile"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/PatchedUserProfile"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/PatchedUserProfile"
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserProfile"
        delete:
            operationId: profile_destroy
            description: Delete a user's profile.
            tags:
                - profile
            parameters:
                - in: path
                  name: user
                  required: true
                  schema:
                      type: integer
                  description: Unique user ID.
            security:
                - tokenAuth: []
            responses:
                "204":
                    description: No Content

    /api/profiles/business/:
        get:
            operationId: profiles_business_list
            description: List all business user profiles.
            tags:
                - profiles
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/UserProfileBusiness"

    /api/profiles/customer/:
        get:
            operationId: profiles_customer_list
            description: List all customer user profiles.
            tags:
                - profiles
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/UserProfileCustomer"

    /api/registration/:
        post:
            operationId: registration_create
            description: Registers a new user and returns an authentication token.
            tags:
                - registration
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Registration"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/Registration"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/Registration"
            security:
                - tokenAuth: []
                - {}
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Registration"

    /api/reviews/:
        get:
            operationId: reviews_list
            description: |-
                Manage reviews: list reviews with optional filtering by business_user_id or reviewer_id, ordering, etc.
            tags:
                - reviews
            parameters:
                - in: query
                  name: business_user_id
                  schema:
                      type: integer
                - in: query
                  name: reviewer_id
                  schema:
                      type: integer
                - in: query
                  name: ordering
                  schema:
                      type: string
                  description: Field to order by.
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Review"
        post:
            operationId: reviews_create
            description: |-
                Create a new review. Only authenticated customers can create reviews. A customer may only submit one review per business user.
            tags:
                - reviews
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Review"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/Review"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/Review"
            security:
                - tokenAuth: []
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Review"

    /api/reviews/{id}/:
        get:
            operationId: reviews_retrieve
            description: Retrieve a specific review.
            tags:
                - reviews
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                  description: Unique review ID.
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Review"
        put:
            operationId: reviews_update
            description: Fully update a review.
            tags:
                - reviews
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                  description: Unique review ID.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Review"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/Review"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/Review"
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Review"
        patch:
            operationId: reviews_partial_update
            description: |-
                Partially update a review. Only 'rating' and 'description' fields are allowed.
            tags:
                - reviews
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                  description: Unique review ID.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/PatchedReview"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/PatchedReview"
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/PatchedReview"
            security:
                - tokenAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Review"
        delete:
            operationId: reviews_destroy
            description: Delete a review.
            tags:
                - reviews
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                  description: Unique review ID.
            security:
                - tokenAuth: []
            responses:
                "204":
                    description: No Content

components:
    schemas:
        AuthToken:
            type: object
            properties:
                username:
                    type: string
                    writeOnly: true
                password:
                    type: string
                    writeOnly: true
                token:
                    type: string
                    readOnly: true
            required:
                - username
                - password
                - token
        BaseInfo:
            type: object
            description: Schema for BaseInfoView.
            properties:
                review_count:
                    type: integer
                average_rating:
                    type: number
                    format: double
                business_profile_count:
                    type: integer
                offer_count:
                    type: integer
            required:
                - review_count
                - average_rating
                - business_profile_count
                - offer_count
        CompletedOrderCount:
            type: object
            description: Schema for CompletedOrderCountView.
            properties:
                completed_order_count:
                    type: integer
            required:
                - completed_order_count
        NullEnum:
            type: string
            enum:
                - null
        Offer:
            type: object
            description: Schema for the Offer model.
            properties:
                id:
                    type: integer
                    readOnly: true
                user:
                    type: integer
                    readOnly: true
                title:
                    type: string
                    maxLength: 255
                image:
                    type: string
                    format: uri
                    nullable: true
                description:
                    type: string
                created_at:
                    type: string
                    format: date-time
                    readOnly: true
                updated_at:
                    type: string
                    format: date-time
                    readOnly: true
                details:
                    type: array
                    items:
                        $ref: "#/components/schemas/OfferDetail"
                    writeOnly: true
                min_price:
                    type: string
                    format: decimal
                    pattern: "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    readOnly: true
                min_delivery_time:
                    type: integer
                    readOnly: true
                user_details:
                    allOf:
                        - $ref: "#/components/schemas/User"
                    readOnly: true
            required:
                - id
                - user
                - title
                - description
                - details
                - created_at
                - updated_at
                - min_price
                - min_delivery_time
                - user_details
        OfferDetail:
            type: object
            description: Schema for the OfferDetail model.
            properties:
                id:
                    type: integer
                    readOnly: true
                title:
                    type: string
                    maxLength: 255
                revisions:
                    type: integer
                    minimum: -1
                    format: int64
                delivery_time_in_days:
                    type: integer
                    minimum: 0
                    format: int64
                price:
                    type: number
                    format: double
                features:
                    type: object
                offer_type:
                    $ref: "#/components/schemas/OfferTypeEnum"
            required:
                - id
                - title
                - revisions
                - delivery_time_in_days
                - price
                - features
                - offer_type
        OfferTypeEnum:
            type: string
            enum:
                - basic
                - standard
                - premium
            description: |
                * `basic` - basic
                * `standard` - standard
                * `premium` - premium
        Order:
            type: object
            description: Schema for the Order model.
            properties:
                id:
                    type: integer
                    readOnly: true
                customer_user:
                    type: integer
                    readOnly: true
                business_user:
                    type: integer
                    readOnly: true
                    nullable: true
                title:
                    type: string
                    readOnly: true
                    nullable: true
                revisions:
                    type: integer
                    readOnly: true
                    nullable: true
                delivery_time_in_days:
                    type: integer
                    readOnly: true
                    nullable: true
                price:
                    type: string
                    format: decimal
                    pattern: "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    readOnly: true
                    nullable: true
                features:
                    type: object
                    readOnly: true
                    nullable: true
                offer_type:
                    oneOf:
                        - $ref: "#/components/schemas/OfferTypeEnum"
                        - $ref: "#/components/schemas/NullEnum"
                    readOnly: true
                    nullable: true
                status:
                    type: string
                    maxLength: 255
                    nullable: true
                created_at:
                    type: string
                    format: date-time
                    readOnly: true
                updated_at:
                    type: string
                    format: date-time
                    readOnly: true
                offer_detail_id:
                    type: integer
                    writeOnly: true
            required:
                - id
                - customer_user
                - business_user
                - title
                - revisions
                - delivery_time_in_days
                - price
                - features
                - offer_type
                - status
                - created_at
                - updated_at
                - offer_detail_id
        PaginatedOfferList:
            type: object
            required:
                - count
                - results
            properties:
                count:
                    type: integer
                    example: 123
                next:
                    type: string
                    nullable: true
                    format: uri
                    example: "http://api.example.org/accounts/?page=4"
                previous:
                    type: string
                    nullable: true
                    format: uri
                    example: "http://api.example.org/accounts/?page=2"
                results:
                    type: array
                    items:
                        $ref: "#/components/schemas/Offer"
        PatchedOffer:
            type: object
            description: Schema for partially updating an Offer.
            properties:
                title:
                    type: string
                    maxLength: 255
                image:
                    type: string
                    format: uri
                    nullable: true
                description:
                    type: string
            # Note: 'details' is not allowed in a partial update.
        PatchedOrder:
            type: object
            description: Schema for partially updating an Order.
            properties:
                status:
                    type: string
                    maxLength: 255
            # Other fields are read-only.
        PatchedReview:
            type: object
            description: Schema for partially updating a Review.
            properties:
                rating:
                    type: number
                    format: double
                    maximum: 100
                    minimum: -100
                    exclusiveMaximum: true
                    exclusiveMinimum: true
                description:
                    type: string
            # Only 'rating' and 'description' are allowed.
        Registration:
            type: object
            description: Schema for user registration.
            properties:
                username:
                    type: string
                    maxLength: 150
                    pattern: "^[\\w.@+-]+$"
                    description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                email:
                    type: string
                    format: email
                    maxLength: 254
                password:
                    type: string
                    writeOnly: true
                    maxLength: 128
                repeated_password:
                    type: string
                    writeOnly: true
                type:
                    $ref: "#/components/schemas/TypeEnum"
            required:
                - username
                - password
                - repeated_password
                - type
        Review:
            type: object
            description: Schema for the Review model.
            properties:
                id:
                    type: integer
                    readOnly: true
                business_user:
                    type: integer
                reviewer:
                    type: integer
                    readOnly: true
                rating:
                    type: number
                    format: double
                    maximum: 100
                    minimum: -100
                    exclusiveMaximum: true
                    exclusiveMinimum: true
                description:
                    type: string
                    nullable: true
                created_at:
                    type: string
                    format: date-time
                    readOnly: true
                updated_at:
                    type: string
                    format: date-time
                    readOnly: true
            required:
                - id
                - business_user
                - reviewer
                - rating
                - created_at
                - updated_at
        TypeEnum:
            type: string
            enum:
                - business
                - customer
            description: |
                * `business` - business
                * `customer` - customer
        User:
            type: object
            description: Schema for basic user information.
            properties:
                first_name:
                    type: string
                    maxLength: 150
                last_name:
                    type: string
                    maxLength: 150
                username:
                    type: string
                    maxLength: 150
                    pattern: "^[\\w.@+-]+$"
                    description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
            required:
                - username
        UserProfile:
            type: object
            description: Schema for detailed user profile.
            properties:
                user:
                    type: integer
                    readOnly: true
                username:
                    type: string
                first_name:
                    type: string
                last_name:
                    type: string
                file:
                    type: string
                    format: uri
                    nullable: true
                location:
                    type: string
                    maxLength: 100
                    nullable: true
                tel:
                    type: string
                    maxLength: 20
                    nullable: true
                description:
                    type: string
                    nullable: true
                working_hours:
                    type: string
                    maxLength: 100
                    nullable: true
                type:
                    $ref: "#/components/schemas/TypeEnum"
                email:
                    type: string
                    format: email
                created_at:
                    type: string
                    format: date-time
                    readOnly: true
            required:
                - user
                - username
                - first_name
                - last_name
                - email
                - created_at
        UserProfileBusiness:
            type: object
            description: Schema for business user profile.
            properties:
                pk:
                    type: integer
                    readOnly: true
                username:
                    type: string
                    readOnly: true
                first_name:
                    type: string
                    readOnly: true
                last_name:
                    type: string
                    readOnly: true
                file:
                    type: string
                    format: uri
                    nullable: true
                location:
                    type: string
                    maxLength: 100
                    nullable: true
                tel:
                    type: string
                    maxLength: 20
                    nullable: true
                description:
                    type: string
                    nullable: true
                working_hours:
                    type: string
                    maxLength: 100
                    nullable: true
                type:
                    $ref: "#/components/schemas/TypeEnum"
            required:
                - pk
                - username
                - first_name
                - last_name
        UserProfileCustomer:
            type: object
            description: Schema for customer user profile.
            properties:
                pk:
                    type: integer
                    readOnly: true
                username:
                    type: string
                    readOnly: true
                first_name:
                    type: string
                    readOnly: true
                last_name:
                    type: string
                    readOnly: true
                file:
                    type: string
                    format: uri
                    nullable: true
                uploaded_at:
                    type: string
                    format: date-time
                    nullable: true
                type:
                    $ref: "#/components/schemas/TypeEnum"
            required:
                - pk
                - username
                - first_name
                - last_name

    securitySchemes:
        tokenAuth:
            type: apiKey
            in: header
            name: Authorization
            description: Token-based authentication with required prefix "Token"
